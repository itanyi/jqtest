/**
 * This class is generated by jOOQ
 */
package com.dator.jqtest.dao.model.tables;


import com.dator.jqtest.dao.model.Ads;
import com.dator.jqtest.dao.model.Keys;
import com.dator.jqtest.dao.model.tables.records.BidRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bid extends TableImpl<BidRecord> {

    private static final long serialVersionUID = 438144241;

    /**
     * The reference instance of <code>ads.Bid</code>
     */
    public static final Bid BID = new Bid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BidRecord> getRecordType() {
        return BidRecord.class;
    }

    /**
     * The column <code>ads.Bid.type</code>.
     */
    public final TableField<BidRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(31).nullable(false), this, "");

    /**
     * The column <code>ads.Bid.id</code>.
     */
    public final TableField<BidRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ads.Bid.creation</code>.
     */
    public final TableField<BidRecord, Timestamp> CREATION = createField("creation", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ads.Bid.lastRemoteAddress</code>.
     */
    public final TableField<BidRecord, String> LASTREMOTEADDRESS = createField("lastRemoteAddress", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>ads.Bid.lastUsername</code>.
     */
    public final TableField<BidRecord, String> LASTUSERNAME = createField("lastUsername", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>ads.Bid.modification</code>.
     */
    public final TableField<BidRecord, Timestamp> MODIFICATION = createField("modification", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ads.Bid.budget</code>.
     */
    public final TableField<BidRecord, BigDecimal> BUDGET = createField("budget", org.jooq.impl.SQLDataType.DECIMAL.precision(19, 2), this, "");

    /**
     * The column <code>ads.Bid.financeStatus</code>.
     */
    public final TableField<BidRecord, String> FINANCESTATUS = createField("financeStatus", org.jooq.impl.SQLDataType.VARCHAR.length(16).defaultValue(org.jooq.impl.DSL.inline("NORMAL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ads.Bid.itemStatus</code>.
     */
    public final TableField<BidRecord, String> ITEMSTATUS = createField("itemStatus", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

    /**
     * The column <code>ads.Bid.price</code>.
     */
    public final TableField<BidRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL.precision(19, 2), this, "");

    /**
     * The column <code>ads.Bid.subject</code>.
     */
    public final TableField<BidRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ads.Bid.category</code>. ad category
     */
    public final TableField<BidRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "ad category");

    /**
     * The column <code>ads.Bid.area</code>.
     */
    public final TableField<BidRecord, String> AREA = createField("area", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>ads.Bid.page</code>.
     */
    public final TableField<BidRecord, String> PAGE = createField("page", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

    /**
     * The column <code>ads.Bid.keyword</code>.
     */
    public final TableField<BidRecord, String> KEYWORD = createField("keyword", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>ads.Bid.campaign_id</code>.
     */
    public final TableField<BidRecord, Long> CAMPAIGN_ID = createField("campaign_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>ads.Bid.reportDaily_id</code>.
     */
    public final TableField<BidRecord, Long> REPORTDAILY_ID = createField("reportDaily_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>ads.Bid.reportTotal_id</code>.
     */
    public final TableField<BidRecord, Long> REPORTTOTAL_ID = createField("reportTotal_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>ads.Bid.token</code>.
     */
    public final TableField<BidRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ads.Bid.auditStatus</code>.
     */
    public final TableField<BidRecord, String> AUDITSTATUS = createField("auditStatus", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("REVIEW", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ads.Bid.refuseReason</code>.
     */
    public final TableField<BidRecord, String> REFUSEREASON = createField("refuseReason", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * Create a <code>ads.Bid</code> table reference
     */
    public Bid() {
        this("Bid", null);
    }

    /**
     * Create an aliased <code>ads.Bid</code> table reference
     */
    public Bid(String alias) {
        this(alias, BID);
    }

    private Bid(String alias, Table<BidRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bid(String alias, Table<BidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ads.ADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BidRecord, Long> getIdentity() {
        return Keys.IDENTITY_BID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BidRecord> getPrimaryKey() {
        return Keys.KEY_BID_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BidRecord>> getKeys() {
        return Arrays.<UniqueKey<BidRecord>>asList(Keys.KEY_BID_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BidRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BidRecord, ?>>asList(Keys.FK104DD456F151C);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bid as(String alias) {
        return new Bid(alias, this);
    }

    /**
     * Rename this table
     */
    public Bid rename(String name) {
        return new Bid(name, null);
    }
}
