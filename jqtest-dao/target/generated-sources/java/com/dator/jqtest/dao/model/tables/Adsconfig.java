/**
 * This class is generated by jOOQ
 */
package com.dator.jqtest.dao.model.tables;


import com.dator.jqtest.dao.model.Ads;
import com.dator.jqtest.dao.model.Keys;
import com.dator.jqtest.dao.model.tables.records.AdsconfigRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Adsconfig extends TableImpl<AdsconfigRecord> {

    private static final long serialVersionUID = -1310843312;

    /**
     * The reference instance of <code>ads.AdsConfig</code>
     */
    public static final Adsconfig ADSCONFIG = new Adsconfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdsconfigRecord> getRecordType() {
        return AdsconfigRecord.class;
    }

    /**
     * The column <code>ads.AdsConfig.name</code>.
     */
    public final TableField<AdsconfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ads.AdsConfig.value</code>.
     */
    public final TableField<AdsconfigRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>ads.AdsConfig.access_date</code>.
     */
    public final TableField<AdsconfigRecord, Date> ACCESS_DATE = createField("access_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>ads.AdsConfig</code> table reference
     */
    public Adsconfig() {
        this("AdsConfig", null);
    }

    /**
     * Create an aliased <code>ads.AdsConfig</code> table reference
     */
    public Adsconfig(String alias) {
        this(alias, ADSCONFIG);
    }

    private Adsconfig(String alias, Table<AdsconfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private Adsconfig(String alias, Table<AdsconfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ads.ADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AdsconfigRecord> getPrimaryKey() {
        return Keys.KEY_ADSCONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AdsconfigRecord>> getKeys() {
        return Arrays.<UniqueKey<AdsconfigRecord>>asList(Keys.KEY_ADSCONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Adsconfig as(String alias) {
        return new Adsconfig(alias, this);
    }

    /**
     * Rename this table
     */
    public Adsconfig rename(String name) {
        return new Adsconfig(name, null);
    }
}
