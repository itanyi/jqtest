/**
 * This class is generated by jOOQ
 */
package com.dator.jqtest.dao.model.tables.daos;


import com.dator.jqtest.dao.model.tables.Route;
import com.dator.jqtest.dao.model.tables.records.RouteRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class RouteDao extends DAOImpl<RouteRecord, com.dator.jqtest.dao.model.tables.pojos.Route, Integer> {

    /**
     * Create a new RouteDao without any configuration
     */
    public RouteDao() {
        super(Route.ROUTE, com.dator.jqtest.dao.model.tables.pojos.Route.class);
    }

    /**
     * Create a new RouteDao with an attached configuration
     */
    @Autowired
    public RouteDao(Configuration configuration) {
        super(Route.ROUTE, com.dator.jqtest.dao.model.tables.pojos.Route.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.dator.jqtest.dao.model.tables.pojos.Route object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchById(Integer... values) {
        return fetch(Route.ROUTE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dator.jqtest.dao.model.tables.pojos.Route fetchOneById(Integer value) {
        return fetchOne(Route.ROUTE.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByName(String... values) {
        return fetch(Route.ROUTE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.dator.jqtest.dao.model.tables.pojos.Route fetchOneByName(String value) {
        return fetchOne(Route.ROUTE.NAME, value);
    }

    /**
     * Fetch records that have <code>parent_name IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByParentName(String... values) {
        return fetch(Route.ROUTE.PARENT_NAME, values);
    }

    /**
     * Fetch records that have <code>strategies IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByStrategies(String... values) {
        return fetch(Route.ROUTE.STRATEGIES, values);
    }

    /**
     * Fetch records that have <code>order IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByOrder(Integer... values) {
        return fetch(Route.ROUTE.ORDER, values);
    }

    /**
     * Fetch records that have <code>target_name IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByTargetName(String... values) {
        return fetch(Route.ROUTE.TARGET_NAME, values);
    }

    /**
     * Fetch records that have <code>isDefault IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByIsdefault(Byte... values) {
        return fetch(Route.ROUTE.ISDEFAULT, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Route> fetchByDescription(String... values) {
        return fetch(Route.ROUTE.DESCRIPTION, values);
    }
}
