/**
 * This class is generated by jOOQ
 */
package com.dator.jqtest.dao.model.tables;


import com.dator.jqtest.dao.model.Ads;
import com.dator.jqtest.dao.model.Keys;
import com.dator.jqtest.dao.model.tables.records.StrategychainRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Strategychain extends TableImpl<StrategychainRecord> {

    private static final long serialVersionUID = -1737110972;

    /**
     * The reference instance of <code>ads.StrategyChain</code>
     */
    public static final Strategychain STRATEGYCHAIN = new Strategychain();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StrategychainRecord> getRecordType() {
        return StrategychainRecord.class;
    }

    /**
     * The column <code>ads.StrategyChain.id</code>.
     */
    public final TableField<StrategychainRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>ads.StrategyChain.name</code>.
     */
    public final TableField<StrategychainRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ads.StrategyChain.type</code>.
     */
    public final TableField<StrategychainRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>ads.StrategyChain.strategies</code>.
     */
    public final TableField<StrategychainRecord, String> STRATEGIES = createField("strategies", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>ads.StrategyChain</code> table reference
     */
    public Strategychain() {
        this("StrategyChain", null);
    }

    /**
     * Create an aliased <code>ads.StrategyChain</code> table reference
     */
    public Strategychain(String alias) {
        this(alias, STRATEGYCHAIN);
    }

    private Strategychain(String alias, Table<StrategychainRecord> aliased) {
        this(alias, aliased, null);
    }

    private Strategychain(String alias, Table<StrategychainRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ads.ADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StrategychainRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_STRATEGYCHAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StrategychainRecord> getPrimaryKey() {
        return Keys.KEY_STRATEGYCHAIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StrategychainRecord>> getKeys() {
        return Arrays.<UniqueKey<StrategychainRecord>>asList(Keys.KEY_STRATEGYCHAIN_PRIMARY, Keys.KEY_STRATEGYCHAIN_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Strategychain as(String alias) {
        return new Strategychain(alias, this);
    }

    /**
     * Rename this table
     */
    public Strategychain rename(String name) {
        return new Strategychain(name, null);
    }
}
