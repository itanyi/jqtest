/**
 * This class is generated by jOOQ
 */
package com.dator.jqtest.dao.model.tables;


import com.dator.jqtest.dao.model.Ads;
import com.dator.jqtest.dao.model.Keys;
import com.dator.jqtest.dao.model.tables.records.RouteRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Route extends TableImpl<RouteRecord> {

    private static final long serialVersionUID = -1428956429;

    /**
     * The reference instance of <code>ads.Route</code>
     */
    public static final Route ROUTE = new Route();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RouteRecord> getRecordType() {
        return RouteRecord.class;
    }

    /**
     * The column <code>ads.Route.id</code>.
     */
    public final TableField<RouteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ads.Route.name</code>.
     */
    public final TableField<RouteRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>ads.Route.parent_name</code>.
     */
    public final TableField<RouteRecord, String> PARENT_NAME = createField("parent_name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>ads.Route.strategies</code>.
     */
    public final TableField<RouteRecord, String> STRATEGIES = createField("strategies", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>ads.Route.order</code>.
     */
    public final TableField<RouteRecord, Integer> ORDER = createField("order", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ads.Route.target_name</code>.
     */
    public final TableField<RouteRecord, String> TARGET_NAME = createField("target_name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>ads.Route.isDefault</code>.
     */
    public final TableField<RouteRecord, Byte> ISDEFAULT = createField("isDefault", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>ads.Route.description</code>.
     */
    public final TableField<RouteRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * Create a <code>ads.Route</code> table reference
     */
    public Route() {
        this("Route", null);
    }

    /**
     * Create an aliased <code>ads.Route</code> table reference
     */
    public Route(String alias) {
        this(alias, ROUTE);
    }

    private Route(String alias, Table<RouteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Route(String alias, Table<RouteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ads.ADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RouteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ROUTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RouteRecord> getPrimaryKey() {
        return Keys.KEY_ROUTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RouteRecord>> getKeys() {
        return Arrays.<UniqueKey<RouteRecord>>asList(Keys.KEY_ROUTE_PRIMARY, Keys.KEY_ROUTE_UNIQ_INDEX_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Route as(String alias) {
        return new Route(alias, this);
    }

    /**
     * Rename this table
     */
    public Route rename(String name) {
        return new Route(name, null);
    }
}
