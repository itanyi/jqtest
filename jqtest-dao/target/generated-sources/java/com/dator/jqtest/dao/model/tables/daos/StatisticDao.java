/**
 * This class is generated by jOOQ
 */
package com.dator.jqtest.dao.model.tables.daos;


import com.dator.jqtest.dao.model.tables.Statistic;
import com.dator.jqtest.dao.model.tables.records.StatisticRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class StatisticDao extends DAOImpl<StatisticRecord, com.dator.jqtest.dao.model.tables.pojos.Statistic, Long> {

    /**
     * Create a new StatisticDao without any configuration
     */
    public StatisticDao() {
        super(Statistic.STATISTIC, com.dator.jqtest.dao.model.tables.pojos.Statistic.class);
    }

    /**
     * Create a new StatisticDao with an attached configuration
     */
    @Autowired
    public StatisticDao(Configuration configuration) {
        super(Statistic.STATISTIC, com.dator.jqtest.dao.model.tables.pojos.Statistic.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.dator.jqtest.dao.model.tables.pojos.Statistic object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchById(Long... values) {
        return fetch(Statistic.STATISTIC.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dator.jqtest.dao.model.tables.pojos.Statistic fetchOneById(Long value) {
        return fetchOne(Statistic.STATISTIC.ID, value);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByTimestamp(Timestamp... values) {
        return fetch(Statistic.STATISTIC.TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>statisticPos IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByStatisticpos(String... values) {
        return fetch(Statistic.STATISTIC.STATISTICPOS, values);
    }

    /**
     * Fetch records that have <code>bidId IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByBidid(Long... values) {
        return fetch(Statistic.STATISTIC.BIDID, values);
    }

    /**
     * Fetch records that have <code>campaignId IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByCampaignid(Long... values) {
        return fetch(Statistic.STATISTIC.CAMPAIGNID, values);
    }

    /**
     * Fetch records that have <code>packageName IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByPackagename(String... values) {
        return fetch(Statistic.STATISTIC.PACKAGENAME, values);
    }

    /**
     * Fetch records that have <code>requestCount IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByRequestcount(Integer... values) {
        return fetch(Statistic.STATISTIC.REQUESTCOUNT, values);
    }

    /**
     * Fetch records that have <code>impressionCount IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByImpressioncount(Integer... values) {
        return fetch(Statistic.STATISTIC.IMPRESSIONCOUNT, values);
    }

    /**
     * Fetch records that have <code>downloadCount IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByDownloadcount(Integer... values) {
        return fetch(Statistic.STATISTIC.DOWNLOADCOUNT, values);
    }

    /**
     * Fetch records that have <code>income IN (values)</code>
     */
    public List<com.dator.jqtest.dao.model.tables.pojos.Statistic> fetchByIncome(BigDecimal... values) {
        return fetch(Statistic.STATISTIC.INCOME, values);
    }
}
